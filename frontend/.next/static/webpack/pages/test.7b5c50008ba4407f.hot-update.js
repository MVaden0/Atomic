"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/test",{

/***/ "./components/DrawingSurface.jsx":
/*!***************************************!*\
  !*** ./components/DrawingSurface.jsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_DrawingSurface_module_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../styles/DrawingSurface.module.css */ \"./styles/DrawingSurface.module.css\");\n/* harmony import */ var _styles_DrawingSurface_module_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_DrawingSurface_module_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_drawing_Ellipse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/drawing/Ellipse */ \"./components/drawing/Ellipse.jsx\");\n/* harmony import */ var _components_drawing_Circle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/drawing/Circle */ \"./components/drawing/Circle.jsx\");\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nvar _this = undefined;\n\n\n\n\n\nvar _s = $RefreshSig$();\n/*\n * Enum of states denoting whether a resize event has started.\n */ var resizeStart = {\n    TOP: Symbol('top'),\n    LEFT: Symbol('left'),\n    BOTTOM: Symbol('bottom'),\n    RIGHT: Symbol('right'),\n    TOPLEFT: Symbol('topleft'),\n    BOTTOMRIGHT: Symbol('bottomright'),\n    BOTTOMLEFT: Symbol('bottomleft'),\n    TOPRIGHT: Symbol('topright'),\n    NONE: Symbol('none')\n};\n/*\n * Enum of states denoting whether a resize event is currently happening.\n */ var resizeCurrent = {\n    TOP: Symbol('top'),\n    LEFT: Symbol('left'),\n    BOTTOM: Symbol('bottom'),\n    RIGHT: Symbol('right'),\n    TOPLEFT: Symbol('topleft'),\n    BOTTOMRIGHT: Symbol('bottomright'),\n    BOTTOMLEFT: Symbol('bottomleft'),\n    TOPRIGHT: Symbol('topright')\n};\n/**\n * Wrapper for the 'getBoundingClientRect' method that returns an object-wrapped\n * container for the data. Returns, height, width, top, left, bottom, and right \n * of element.\n * @param   {object}  element  DOM element to get rect of.\n * @return  {object}           Object containing wrapped data.\n */ var getBoundingRect = function(element) {\n    var ref = element.getBoundingClientRect(), top = ref.top, left = ref.left, bottom = ref.bottom, right = ref.right, height = ref.height, width = ref.width;\n    return {\n        top: top,\n        left: left,\n        bottom: bottom,\n        right: right,\n        height: height,\n        width: width\n    };\n};\n/**\n * Checks if mouse position is close to a given edge.\n * @param    {double}  pos     Mouse position.\n * @param    {double}  bounds  Boundary of edge to check.\n * @param    {double}  offset  Offset area to check in either direction from bounds.\n * @returns  {boolean}         Boolean denoting if the edge condition is met.\n */ var checkEdge = function(pos, bounds, offset) {\n    return pos < bounds + offset && pos > bounds - offset;\n};\n/**\n * Checks if mouse position is close to a given corner.\n * @param    {double}  xPos     X position of mouse.\n * @param    {double}  yPos     Y position of mouse.\n * @param    {double}  xBounds  Bounds to check on x axis. \n * @param    {double}  yBounds  Bounds to check on y axis.\n * @param    {double}  offset   Offset area to check in either direction from both bounds.\n * @returns  {boolean}          Booleean denoting whether the corner condition is met.\n */ var checkCorner = function(xPos, yPos, xBounds, yBounds, offset) {\n    return xPos < xBounds + offset && xPos > xBounds - offset && yPos < yBounds + offset && yPos > yBounds - offset;\n};\n/**\n * Checks if a resize event has started on any corner or edge.\n * @param    {Event}       event             Event target.\n * @param    {double}      top               Top bounds to check.\n * @param    {double}      left              Left bounds to check.\n * @param    {double}      bottom            Bottom bounds to check. \n * @param    {double}      right             Right bounds to check.\n * @param    {double}      offset            Offset area to check in either directions from each bound.\n * @param    {ReactState}  resizeTop     React state which denotes if resize event is happening from top.\n * @param    {ReactState}  resizeLeft    React state which denotes if resize event is happening from left.\n * @param    {ReactState}  resizeBottom  React state which denotes if resize event is happening from bottom.\n * @param    {ReactState}  resizeRight   React state which denotes if resize event is happening from right.\n * @returns  {state}                         State denoting which resize event is starting.\n */ var checkResizeStart = function(event, top, left, bottom, right, offset, resizeTop, resizeLeft, resizeBottom, resizeRight) {\n    // change cursor based on position\n    if (checkCorner(event.pageX, event.pageY, left, top, offset) && !resizeTop.current && !resizeLeft.current) {\n        return resizeStart.TOPLEFT;\n    } else if (checkCorner(event.pageX, event.pageY, right, bottom, offset) && !resizeBottom.current && !resizeRight.current) {\n        return resizeStart.BOTTOMRIGHT;\n    } else if (checkCorner(event.pageX, event.pageY, left, bottom, offset) && !resizeBottom.current && !resizeLeft.current) {\n        return resizeStart.BOTTOMLEFT;\n    } else if (checkCorner(event.pageX, event.pageY, right, top, offset) && !resizeTop.current && !resizeRight.current) {\n        return resizeStart.TOPRIGHT;\n    } else if (checkEdge(event.pageY, top, offset) && !resizeTop.current) {\n        return resizeStart.TOP;\n    } else if (checkEdge(event.pageX, left, offset) && !resizeLeft.current) {\n        return resizeStart.LEFT;\n    } else if (checkEdge(event.pageY, bottom, offset) && !resizeBottom.current) {\n        return resizeStart.BOTTOM;\n    } else if (checkEdge(event.pageX, right, offset) && !resizeRight.current) {\n        return resizeStart.RIGHT;\n    } else if (!resizeTop.current && !resizeLeft.current && !resizeBottom.current && !resizeRight.current) {\n        return resizeStart.NONE;\n    }\n    ;\n};\n/**\n * Checks if a resize event is currently happening.\n * @param    {ReactState}  resizeTop     React state which denotes if resize event is happening from top.\n * @param    {ReactState}  resizeLeft    React state which denotes if resize event is happening from left.\n * @param    {ReactState}  resizeBottom  React state which denotes if resize event is happening from bottom.\n * @param    {ReactState}  resizeRight   React state which denotes if resize event is happening from right.\n * @returns  {state}                         State denoting which resize event is currently happening.\n */ var checkResizeCurrent = function(resizeTop, resizeLeft, resizeBottom, resizeRight) {\n    if (resizeTop.current && resizeLeft.current) {\n        return resizeCurrent.TOPLEFT;\n    } else if (resizeBottom.current && resizeRight.current) {\n        return resizeCurrent.BOTTOMRIGHT;\n    } else if (resizeBottom.current && resizeLeft.current) {\n        return resizeCurrent.BOTTOMLEFT;\n    } else if (resizeTop.current && resizeRight.current) {\n        return resizeCurrent.TOPRIGHT;\n    } else if (resizeTop.current) {\n        return resizeCurrent.TOP;\n    } else if (resizeLeft.current) {\n        return resizeCurrent.LEFT;\n    } else if (resizeBottom.current) {\n        return resizeCurrent.BOTTOM;\n    } else if (resizeRight.current) {\n        return resizeCurrent.RIGHT;\n    }\n    ;\n};\nvar computeMouseType = function(resizeStartCase) {\n    switch(resizeStartCase){\n        case resizeStart.TOPLEFT:\n            document.body.style.cursor = \"nwse-resize\";\n            break;\n        case resizeStart.BOTTOMRIGHT:\n            document.body.style.cursor = \"nwse-resize\";\n            break;\n        case resizeStart.BOTTOMLEFT:\n            document.body.style.cursor = \"nesw-resize\";\n            break;\n        case resizeStart.TOPRIGHT:\n            document.body.style.cursor = \"nesw-resize\";\n            break;\n        case resizeStart.TOP:\n            document.body.style.cursor = \"ns-resize\";\n            break;\n        case resizeStart.LEFT:\n            document.body.style.cursor = \"ew-resize\";\n            break;\n        case resizeStart.BOTTOM:\n            document.body.style.cursor = \"ns-resize\";\n            break;\n        case resizeStart.RIGHT:\n            document.body.style.cursor = \"ew-resize\";\n            break;\n        case resizeStart.NONE:\n            document.body.style.cursor = \"alias\";\n            break;\n    }\n    ;\n};\nvar DrawingSurface = function(props) {\n    _s();\n    // props\n    var draw = props.draw, rest = _objectWithoutProperties(props, [\n        \"draw\"\n    ]);\n    // params\n    var minWidth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(100);\n    var minHeight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(100);\n    // DOM refs\n    var containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var topBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var leftBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var bottomBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var rightBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // resizing status    \n    var resizeTop = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var resizeLeft = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var resizeBottom = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var resizeRight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var width = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(props.width);\n    var height = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(props.height);\n    var left = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    var top = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(width.current), widthState = ref[0], setWidthState = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(height.current), heightState = ref1[0], setHeightState = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(left.current), leftState = ref2[0], setLeftState = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(top.current), topState = ref3[0], setTopState = ref3[1];\n    var handleMouseMove = function(event) {\n        // get reference to container\n        var container = containerRef.current;\n        // get reference to borders\n        var topBorder = topBorderRef.current;\n        var leftBorder = leftBorderRef.current;\n        var bottomBorder = bottomBorderRef.current;\n        var rightBorder = rightBorderRef.current;\n        // get positioning of container\n        var containerRect = getBoundingRect(container);\n        // get reference and container to parent\n        var parent = container.parentElement;\n        var parentRect = getBoundingRect(parent);\n        var resizeStartCase = checkResizeStart(event, containerRect.top, containerRect.left, containerRect.bottom, containerRect.right, 20, resizeTop, resizeLeft, resizeBottom, resizeRight);\n        //computeMouseType(resizeStartCase);\n        // compute current case\n        var resizeCurrentCase = checkResizeCurrent(resizeTop, resizeLeft, resizeBottom, resizeRight);\n        switch(resizeCurrentCase){\n            case resizeCurrent.TOPLEFT:\n                // turn on all borders\n                topBorder.style.display = 'block';\n                leftBorder.style.display = 'block';\n                bottomBorder.style.display = 'block';\n                rightBorder.style.display = 'block';\n                if (width.current - (event.pageX - containerRect.left) * 2 >= minWidth.current) {\n                    left.current = event.pageX - parentRect.left;\n                    width.current = width.current - (event.pageX - containerRect.left) * 2;\n                    setLeftState(left.current);\n                    setWidthState(width.current);\n                }\n                ;\n                if (height.current - (event.pageY - containerRect.top) * 2 >= minHeight.current) {\n                    top.current = event.pageY;\n                    height.current = height.current - (event.pageY - containerRect.top) * 2;\n                    setTopState(top.current);\n                    setHeightState(height.current);\n                }\n                ;\n                break;\n            case resizeCurrent.BOTTOMRIGHT:\n                break;\n            case resizeCurrent.BOTTOMLEFT:\n                break;\n            case resizeCurrent.TOPRIGHT:\n                break;\n            case resizeCurrent.TOP:\n                topBorder.style.display = 'block';\n                bottomBorder.style.display = 'block';\n                if (height.current - (event.pageY - containerRect.top) * 2 >= minHeight.current) {\n                    top.current = event.pageY;\n                    height.current = height.current - (event.pageY - containerRect.top) * 2;\n                    setTopState(top.current);\n                    setHeightState(height.current);\n                }\n                ;\n                break;\n            case resizeCurrent.LEFT:\n                leftBorder.style.display = 'block';\n                rightBorder.style.display = 'block';\n                if (width.current - (event.pageX - containerRect.left) * 2 >= minWidth.current) {\n                    left.current = event.pageX - parentRect.left;\n                    width.current = width.current - (event.pageX - containerRect.left) * 2;\n                    setLeftState(left.current);\n                    setWidthState(width.current);\n                }\n                ;\n                break;\n            case resizeCurrent.BOTTOM:\n                break;\n            case resizeCurrent.RIGHT:\n                break;\n        }\n        ;\n    };\n    var handleMouseDown = function(event) {\n        // get reference to container\n        var container = containerRef.current;\n        // get reference to borders\n        var topBorder = topBorderRef.current;\n        var leftBorder = leftBorderRef.current;\n        var bottomBorder = bottomBorderRef.current;\n        var rightBorder = rightBorderRef.current;\n        // get positioning of container\n        var containerRect = getBoundingRect(container);\n        var resizeStartCase = checkResizeStart(event, containerRect.top, containerRect.left, containerRect.bottom, containerRect.right, 20, resizeTop, resizeLeft, resizeBottom, resizeRight);\n        //computeMouseType(resizeStartCase);\n        switch(resizeStartCase){\n            case resizeStart.TOPLEFT:\n                //toggleResize(true, resizeTop, resizeLeft);\n                resizeTop.current = true;\n                resizeLeft.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.BOTTOMRIGHT:\n                resizeBottom.current = true;\n                resizeRight.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.BOTTOMLEFT:\n                resizeBottom.current = true;\n                resizeLeft.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.TOPRIGHT:\n                resizeTop.current = true;\n                resizeRight.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.TOP:\n                resizeTop.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.LEFT:\n                resizeLeft.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.BOTTOM:\n                resizeBottom.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.RIGHT:\n                resizeRight.current = true;\n                document.body.style.cursor = \"grabbing\";\n                break;\n            case resizeStart.NONE:\n                document.body.style.cursor = \"alias\";\n                break;\n        }\n        ;\n    };\n    var handleMouseUp = function(event) {\n        // reset all states for resizing\n        resizeTop.current = false;\n        resizeLeft.current = false;\n        resizeBottom.current = false;\n        resizeRight.current = false;\n        // get reference to container\n        var container = containerRef.current;\n        // get reference to borders\n        var topBorder = topBorderRef.current;\n        var leftBorder = leftBorderRef.current;\n        var bottomBorder = bottomBorderRef.current;\n        var rightBorder = rightBorderRef.current;\n        // reset all border displays\n        topBorder.style.display = 'none';\n        leftBorder.style.display = 'none';\n        bottomBorder.style.display = 'none';\n        rightBorder.style.display = 'none';\n        // get positioning of container\n        var containerRect = getBoundingRect(container);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var container = containerRef.current;\n        var canvas = canvasRef.current;\n        /* TESTING TESTING TESTING TESTING TESTING TESTING TESTING */ //canvas.appendChild(circle)\n        /* TESTING TESTING TESTING TESTING TESTING TESTING TESTING */ var parent = container.parentElement;\n        var parentRect = getBoundingRect(parent);\n        var surfaceTop = (parentRect.height - height.current) / 2;\n        var surfaceLeft = (parentRect.width - width.current) / 2;\n        top.current = surfaceTop;\n        left.current = surfaceLeft;\n        setWidthState(width.current);\n        setHeightState(height.current);\n        setTopState(top.current);\n        setLeftState(left.current);\n        var frameCount = 0;\n        var animationFrameId;\n        var render = function() {\n            frameCount++;\n            draw(canvas, frameCount);\n            animationFrameId = window.requestAnimationFrame(render);\n        };\n        render();\n        window.addEventListener('mousemove', handleMouseMove);\n        window.addEventListener('mousedown', handleMouseDown);\n        window.addEventListener('mouseup', handleMouseUp);\n        return function() {\n            window.cancelAnimationFrame(animationFrameId);\n        };\n    }, [\n        draw\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_DrawingSurface_module_css__WEBPACK_IMPORTED_MODULE_4___default().container),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                width: \"1520px\",\n                height: \"936px\",\n                className: (_styles_DrawingSurface_module_css__WEBPACK_IMPORTED_MODULE_4___default().backgroundCanvas),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                        ref: topBorderRef,\n                        style: {\n                            display: 'none',\n                            stroke: '#f8edd6',\n                            strokeWidth: 2,\n                            strokeDasharray: '5, 5'\n                        },\n                        x1: \"0\",\n                        y1: topState,\n                        x2: \"1520\",\n                        y2: topState\n                    }, void 0, false, {\n                        fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                        lineNumber: 481,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                        ref: leftBorderRef,\n                        style: {\n                            display: 'none',\n                            stroke: '#f8edd6',\n                            strokeWidth: 2,\n                            strokeDasharray: '5, 5'\n                        },\n                        x1: leftState,\n                        y1: \"0\",\n                        x2: leftState,\n                        y2: \"936\"\n                    }, void 0, false, {\n                        fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                        lineNumber: 482,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                        ref: bottomBorderRef,\n                        style: {\n                            display: 'none',\n                            stroke: '#f8edd6',\n                            strokeWidth: 2,\n                            strokeDasharray: '5, 5'\n                        },\n                        x1: \"0\",\n                        y1: topState + heightState,\n                        x2: \"1520\",\n                        y2: topState + heightState\n                    }, void 0, false, {\n                        fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                        lineNumber: 483,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                        ref: rightBorderRef,\n                        style: {\n                            display: 'none',\n                            stroke: '#f8edd6',\n                            strokeWidth: 2,\n                            strokeDasharray: '5, 5'\n                        },\n                        x1: leftState + widthState,\n                        y1: \"0\",\n                        x2: leftState + widthState,\n                        y2: \"936\"\n                    }, void 0, false, {\n                        fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                        lineNumber: 484,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                lineNumber: 480,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: containerRef,\n                className: (_styles_DrawingSurface_module_css__WEBPACK_IMPORTED_MODULE_4___default().canvasContainer),\n                style: {\n                    width: \"\".concat(widthState, \"px\"),\n                    height: \"\".concat(heightState, \"px\"),\n                    top: \"\".concat(topState, \"px\"),\n                    left: \"\".concat(leftState, \"px\")\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    id: \"surface\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    ref: canvasRef,\n                    className: (_styles_DrawingSurface_module_css__WEBPACK_IMPORTED_MODULE_4___default().canvas),\n                    width: \"\".concat(widthState, \"px\"),\n                    height: \"\".concat(heightState, \"px\"),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_drawing_Ellipse__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        cx: \"400\",\n                        cy: \"400\",\n                        rx: \"200\",\n                        ry: \"200\"\n                    }, void 0, false, {\n                        fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                        lineNumber: 488,\n                        columnNumber: 15\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                    lineNumber: 487,\n                    columnNumber: 11\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n                lineNumber: 486,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/michael/code/Atomic/frontend/components/DrawingSurface.jsx\",\n        lineNumber: 479,\n        columnNumber: 5\n    }, _this);\n};\n_s(DrawingSurface, \"LyOYp1Bledb+7IxnV/Ulu60n7kw=\");\n_c = DrawingSurface;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DrawingSurface);\nvar _c;\n$RefreshReg$(_c, \"DrawingSurface\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/DrawingSurface.jsx\n");

/***/ }),

/***/ "./components/drawing/Ellipse.jsx":
/*!****************************************!*\
  !*** ./components/drawing/Ellipse.jsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _BoundingRect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BoundingRect */ \"./components/drawing/BoundingRect.jsx\");\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nvar _this = undefined;\n\n\n\nvar _s = $RefreshSig$();\n/*\n * Enum of states denoting whether a resize event has started.\n */ var resizeStart = {\n    TOP: Symbol('top'),\n    LEFT: Symbol('left'),\n    BOTTOM: Symbol('bottom'),\n    RIGHT: Symbol('right'),\n    TOPLEFT: Symbol('topleft'),\n    BOTTOMRIGHT: Symbol('bottomright'),\n    BOTTOMLEFT: Symbol('bottomleft'),\n    TOPRIGHT: Symbol('topright'),\n    NONE: Symbol('none')\n};\n/*\n   * Enum of states denoting whether a resize event is currently happening.\n   */ var resizeCurrent = {\n    TOP: Symbol('top'),\n    LEFT: Symbol('left'),\n    BOTTOM: Symbol('bottom'),\n    RIGHT: Symbol('right'),\n    TOPLEFT: Symbol('topleft'),\n    BOTTOMRIGHT: Symbol('bottomright'),\n    BOTTOMLEFT: Symbol('bottomleft'),\n    TOPRIGHT: Symbol('topright')\n};\n/**\n   * Wrapper for the 'getBoundingClientRect' method that returns an object-wrapped\n   * container for the data. Returns, height, width, top, left, bottom, and right \n   * of element.\n   * @param   {object}  element  DOM element to get rect of.\n   * @return  {object}           Object containing wrapped data.\n   */ var getBoundingRect = function(element) {\n    var ref = element.getBoundingClientRect(), top = ref.top, left = ref.left, bottom = ref.bottom, right = ref.right, height = ref.height, width = ref.width;\n    return {\n        top: top,\n        left: left,\n        bottom: bottom,\n        right: right,\n        height: height,\n        width: width\n    };\n};\n/**\n   * Checks if mouse position is close to a given edge.\n   * @param    {double}  pos     Mouse position.\n   * @param    {double}  bounds  Boundary of edge to check.\n   * @param    {double}  offset  Offset area to check in either direction from bounds.\n   * @returns  {boolean}         Boolean denoting if the edge condition is met.\n   */ var checkEdge = function(pos, bounds, offset) {\n    return pos < bounds + offset && pos > bounds - offset;\n};\n/**\n   * Checks if mouse position is close to a given corner.\n   * @param    {double}  xPos     X position of mouse.\n   * @param    {double}  yPos     Y position of mouse.\n   * @param    {double}  xBounds  Bounds to check on x axis. \n   * @param    {double}  yBounds  Bounds to check on y axis.\n   * @param    {double}  offset   Offset area to check in either direction from both bounds.\n   * @returns  {boolean}          Booleean denoting whether the corner condition is met.\n   */ var checkCorner = function(xPos, yPos, xBounds, yBounds, offset) {\n    return xPos < xBounds + offset && xPos > xBounds - offset && yPos < yBounds + offset && yPos > yBounds - offset;\n};\n/**\n   * Checks if a resize event has started on any corner or edge.\n   * @param    {Event}       event             Event target.\n   * @param    {double}      top               Top bounds to check.\n   * @param    {double}      left              Left bounds to check.\n   * @param    {double}      bottom            Bottom bounds to check. \n   * @param    {double}      right             Right bounds to check.\n   * @param    {double}      offset            Offset area to check in either directions from each bound.\n   * @param    {ReactState}  resizeTop     React state which denotes if resize event is happening from top.\n   * @param    {ReactState}  resizeLeft    React state which denotes if resize event is happening from left.\n   * @param    {ReactState}  resizeBottom  React state which denotes if resize event is happening from bottom.\n   * @param    {ReactState}  resizeRight   React state which denotes if resize event is happening from right.\n   * @returns  {state}                         State denoting which resize event is starting.\n   */ var checkResizeStart = function(event, top, left, bottom, right, offset, resizeTop, resizeLeft, resizeBottom, resizeRight) {\n    // change cursor based on position\n    if (checkCorner(event.pageX, event.pageY, left, top, offset) && !resizeTop.current && !resizeLeft.current) {\n        return resizeStart.TOPLEFT;\n    } else if (checkCorner(event.pageX, event.pageY, right, bottom, offset) && !resizeBottom.current && !resizeRight.current) {\n        return resizeStart.BOTTOMRIGHT;\n    } else if (checkCorner(event.pageX, event.pageY, left, bottom, offset) && !resizeBottom.current && !resizeLeft.current) {\n        return resizeStart.BOTTOMLEFT;\n    } else if (checkCorner(event.pageX, event.pageY, right, top, offset) && !resizeTop.current && !resizeRight.current) {\n        return resizeStart.TOPRIGHT;\n    } else if (checkEdge(event.pageY, top, offset) && !resizeTop.current) {\n        return resizeStart.TOP;\n    } else if (checkEdge(event.pageX, left, offset) && !resizeLeft.current) {\n        return resizeStart.LEFT;\n    } else if (checkEdge(event.pageY, bottom, offset) && !resizeBottom.current) {\n        return resizeStart.BOTTOM;\n    } else if (checkEdge(event.pageX, right, offset) && !resizeRight.current) {\n        return resizeStart.RIGHT;\n    } else if (!resizeTop.current && !resizeLeft.current && !resizeBottom.current && !resizeRight.current) {\n        return resizeStart.NONE;\n    }\n    ;\n};\n/**\n   * Checks if a resize event is currently happening.\n   * @param    {ReactState}  resizeTop     React state which denotes if resize event is happening from top.\n   * @param    {ReactState}  resizeLeft    React state which denotes if resize event is happening from left.\n   * @param    {ReactState}  resizeBottom  React state which denotes if resize event is happening from bottom.\n   * @param    {ReactState}  resizeRight   React state which denotes if resize event is happening from right.\n   * @returns  {state}                         State denoting which resize event is currently happening.\n   */ var checkResizeCurrent = function(resizeTop, resizeLeft, resizeBottom, resizeRight) {\n    if (resizeTop.current && resizeLeft.current) {\n        return resizeCurrent.TOPLEFT;\n    } else if (resizeBottom.current && resizeRight.current) {\n        return resizeCurrent.BOTTOMRIGHT;\n    } else if (resizeBottom.current && resizeLeft.current) {\n        return resizeCurrent.BOTTOMLEFT;\n    } else if (resizeTop.current && resizeRight.current) {\n        return resizeCurrent.TOPRIGHT;\n    } else if (resizeTop.current) {\n        return resizeCurrent.TOP;\n    } else if (resizeLeft.current) {\n        return resizeCurrent.LEFT;\n    } else if (resizeBottom.current) {\n        return resizeCurrent.BOTTOM;\n    } else if (resizeRight.current) {\n        return resizeCurrent.RIGHT;\n    }\n    ;\n};\nvar computeMouseType = function(resizeStartCase) {\n    switch(resizeStartCase){\n        case resizeStart.TOPLEFT:\n            document.body.style.cursor = \"nwse-resize\";\n            break;\n        case resizeStart.BOTTOMRIGHT:\n            document.body.style.cursor = \"nwse-resize\";\n            break;\n        case resizeStart.BOTTOMLEFT:\n            document.body.style.cursor = \"nesw-resize\";\n            break;\n        case resizeStart.TOPRIGHT:\n            document.body.style.cursor = \"nesw-resize\";\n            break;\n        case resizeStart.TOP:\n            document.body.style.cursor = \"ns-resize\";\n            break;\n        case resizeStart.LEFT:\n            document.body.style.cursor = \"ew-resize\";\n            break;\n        case resizeStart.BOTTOM:\n            document.body.style.cursor = \"ns-resize\";\n            break;\n        case resizeStart.RIGHT:\n            document.body.style.cursor = \"ew-resize\";\n            break;\n        case resizeStart.NONE:\n            document.body.style.cursor = \"alias\";\n            break;\n    }\n    ;\n};\nvar Ellipse = function(props) {\n    _s();\n    // props\n    var draw = props.draw, rest = _objectWithoutProperties(props, [\n        \"draw\"\n    ]);\n    var selected = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(selected.current), selectedState = ref[0], setSelectedState = ref[1];\n    // params\n    var minWidth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(100);\n    var minHeight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(100);\n    var topBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var leftBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var bottomBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var rightBorderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // resizing status    \n    var resizeTop = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var resizeLeft = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var resizeBottom = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var resizeRight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    var width = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(props.rx * 2);\n    var height = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(props.ry * 2);\n    var left = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    var top = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(width.current), widthState = ref1[0], setWidthState = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(height.current), heightState = ref2[0], setHeightState = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(left.current), leftState = ref3[0], setLeftState = ref3[1];\n    var ref4 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(top.current), topState = ref4[0], setTopState = ref4[1];\n    var ellipseRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var toggleSelected = function() {\n        if (selected.current == true) {\n            selected.current = false;\n            setSelectedState(false);\n        } else {\n            selected.current = true;\n            setSelectedState(true);\n        }\n        ;\n    };\n    var handleMouseMove = function(event) {\n        var ellipse = ellipseRef.current;\n        var ellipseRect = getBoundingRect(ellipse);\n        var resizeStartCase = checkResizeStart(event, ellipseRect.top, ellipseRect.left, ellipseRect.bottom, ellipseRect.right, 20, resizeTop, resizeLeft, resizeBottom, resizeRight);\n        computeMouseType(resizeStartCase);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var frameCount = 0;\n        var animationFrameId;\n        var render = function() {\n            frameCount++;\n            //draw(canvas, frameCount)\n            animationFrameId = window.requestAnimationFrame(render);\n        };\n        render();\n        window.addEventListener('mousemove', handleMouseMove);\n        return function() {\n            window.cancelAnimationFrame(animationFrameId);\n        };\n    }, [\n        draw\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var ellipse = ellipseRef.current;\n        ellipse.addEventListener('click', function(event) {\n            toggleSelected();\n        });\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ellipse\", {\n                ref: ellipseRef,\n                cx: props.cx,\n                cy: props.cy,\n                rx: props.rx,\n                ry: props.ry,\n                stroke: \"#1a1a1a\",\n                strokeWidth: \"0\",\n                fill: \"#00ff00\"\n            }, void 0, false, {\n                fileName: \"/home/michael/code/Atomic/frontend/components/drawing/Ellipse.jsx\",\n                lineNumber: 284,\n                columnNumber: 13\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_BoundingRect__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                x1: (parseInt(props.cx) - parseInt(props.rx)).toString(),\n                y1: (parseInt(props.cy) - parseInt(props.ry)).toString(),\n                x2: (parseInt(props.cx) - parseInt(props.rx)).toString(),\n                y2: (parseInt(props.cy) + parseInt(props.ry)).toString(),\n                x3: (parseInt(props.cx) + parseInt(props.rx)).toString(),\n                y3: (parseInt(props.cy) + parseInt(props.ry)).toString(),\n                x4: (parseInt(props.cx) + parseInt(props.rx)).toString(),\n                y4: (parseInt(props.cy) - parseInt(props.ry)).toString(),\n                radius: \"5\",\n                color: \"#f8edd6\",\n                selected: selectedState\n            }, void 0, false, {\n                fileName: \"/home/michael/code/Atomic/frontend/components/drawing/Ellipse.jsx\",\n                lineNumber: 294,\n                columnNumber: 13\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/michael/code/Atomic/frontend/components/drawing/Ellipse.jsx\",\n        lineNumber: 283,\n        columnNumber: 9\n    }, _this);\n};\n_s(Ellipse, \"sL8JKaB/uI+zmmWI2iqmXvGVvM0=\");\n_c = Ellipse;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ellipse);\nvar _c;\n$RefreshReg$(_c, \"Ellipse\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/drawing/Ellipse.jsx\n");

/***/ })

});